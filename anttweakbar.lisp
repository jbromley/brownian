;;; Generated by Verrazano 0.5
;;; WARNING: This is a generated file, editing it is unwise!


(cl:in-package :cl-user)

(cl:defpackage :anttweakbar
  (:use #:cl #:cffi)
  (:nicknames)
  (:export "C-TW-ENUM-VAL-NEW"
           "C-TW-ENUM-VAL-CONSTRUCTOR"
           "C-TW-ENUM-VAL-OPERATOR-="
           "C-TW-STRUCT-MEMBER-NEW"
           "C-TW-STRUCT-MEMBER-CONSTRUCTOR"
           "C-TW-STRUCT-MEMBER-OPERATOR-="
           "TW-ADD-VAR-CB"
           "TW-DEFINE-ENUM-FROM-STRING"
           "TW-COPY-STD-STRING-TO-CLIENT-FUNC"
           "TW-MOUSE-BUTTON"
           "TW-SET-BOTTOM-BAR"
           "TW-EVENT-WIN"
           "GLU-TSPECIALFUN"
           "TW-EVENT-MOUSE-MOTION-GLUT"
           "TW-NEW-BAR"
           "TW-SET-VAR-CALLBACK"
           "TW-DELETE-BAR"
           "GLU-TMOUSEBUTTONFUN"
           "TW-WINDOW-EXISTS"
           "TW-MOUSE-ACTION"
           "TW-EVENT-SFML"
           "TW-KEY-TEST"
           "TW-EVENT-KEYBOARD-GLUT"
           "TW-KEY-PRESSED"
           "TW-MOUSE-MOTION"
           "GLU-TKEYBOARDFUN"
           "TW-GET-VAR-CALLBACK"
           "TW-GET-BAR-COUNT"
           "TW-GET-CURRENT-WINDOW"
           "TW-ADD-VAR-RO"
           "TW-MOUSE-PRESSED"
           "TW-MOUSE-RELEASED"
           "E-TW-MOUSE-ACTION"
           "TW-GLUT-MODIFIERS-FUNC"
           "TW-EVENT-CHAR-GLFW"
           "TW-DEFINE-ENUM"
           "TW-GET-BAR-NAME"
           "TW-COPY-CD-STRING-TO-CLIENT-FUNC"
           "TW-GET-TOP-BAR"
           "TW-SET-CURRENT-WINDOW"
           "TW-DUMMY-TW-SHORT"
           "TW-GET-LAST-ERROR"
           "TW-MOUSE-WHEEL"
           "TW-EVENT-SDL"
           "TW-KEY-SPECIAL"
           "TW-MOUSE-BUTTON-ID"
           "TW-MOUSE-RIGHT"
           "TW-MOUSE-MIDDLE"
           "TW-MOUSE-LEFT"
           "E-TW-MOUSE-BUTTON-ID"
           "TW-SET-TOP-BAR"
           "TW-ADD-BUTTON"
           "TW-BUTTON-CALLBACK"
           "TW-ADD-SEPARATOR"
           "TW-KEY-MODIFIER"
           "TW-GET-BAR-BY-NAME"
           "TW-COPY-STD-STRING-TO-CLIENT"
           "TW-GET-PARAM"
           "TW-INIT"
           "TW-GRAPH-API"
           "TW-DIRECT-3D-11"
           "TW-DIRECT-3D-10"
           "TW-DIRECT-3D-9"
           "TW-OPENGL"
           "E-TW-GRAPH-API"
           "TW-COPY-CD-STRING-TO-CLIENT"
           "TW-DUMMY-TW-CHAR"
           "TW-EVENT-KEY-GLFW"
           "TW-COPY-CD-STRING-TO-LIBRARY"
           "TW-KEY-LAST"
           "TW-KEY-F-15"
           "TW-KEY-F-14"
           "TW-KEY-F-13"
           "TW-KEY-F-12"
           "TW-KEY-F-11"
           "TW-KEY-F-10"
           "TW-KEY-F-9"
           "TW-KEY-F-8"
           "TW-KEY-F-7"
           "TW-KEY-F-6"
           "TW-KEY-F-5"
           "TW-KEY-F-4"
           "TW-KEY-F-3"
           "TW-KEY-F-2"
           "TW-KEY-F-1"
           "TW-KEY-PAGE-DOWN"
           "TW-KEY-PAGE-UP"
           "TW-KEY-END"
           "TW-KEY-HOME"
           "TW-KEY-INSERT"
           "TW-KEY-LEFT"
           "TW-KEY-RIGHT"
           "TW-KEY-DOWN"
           "TW-KEY-UP"
           "TW-KEY-DELETE"
           "TW-KEY-SPACE"
           "TW-KEY-ESCAPE"
           "TW-KEY-PAUSE"
           "TW-KEY-RETURN"
           "TW-KEY-CLEAR"
           "TW-KEY-TAB"
           "TW-KEY-BACKSPACE"
           "E-KEY-SPECIAL"
           "TW-DUMMY-TW-INT"
           "TW-REFRESH-BAR"
           "TW-ENUM-VAL"
           "LABEL"
           "VALUE"
           "C-TW-ENUM-VAL"
           "TW-EVENT-MOUSE-BUTTON-GLUT"
           "TW-KMOD-META"
           "TW-KMOD-ALT"
           "TW-KMOD-CTRL"
           "TW-KMOD-SHIFT"
           "TW-KMOD-NONE"
           "E-TW-KEY-MODIFIER"
           "TW-COPY-STD-STRING-TO-LIBRARY"
           "BASIC-STRING-<CHAR-,STD-::CHAR-TRAITS-<CHAR->,STD-::ALLOCATOR-<CHAR-> >"
           "STRING"
           "TW-REMOVE-ALL-VARS"
           "TW-WINDOW-SIZE"
           "TW-HANDLE-ERRORS"
           "TW-SET-PARAM"
           "TW-DUMMY-TW-FLOAT"
           "TW-DELETE-ALL-BARS"
           "TW-GET-BAR-BY-INDEX"
           "TW-DUMMY-TW-DOUBLE"
           "TW-REMOVE-VAR"
           "TW-TERMINATE"
           "GLU-TMOUSEMOTIONFUN"
           "TW-PARAM-VALUE-TYPE"
           "TW-PARAM-CSTRING"
           "TW-PARAM-DOUBLE"
           "TW-PARAM-FLOAT"
           "TW-PARAM-INT-32"
           "E-TW-PARAM-VALUE-TYPE"
           "TW-DEFINE-STRUCT"
           "TW-SUMMARY-CALLBACK"
           "TW-STRUCT-MEMBER"
           "DEF-STRING"
           "OFFSET"
           "TYPE"
           "NAME"
           "C-TW-STRUCT-MEMBER"
           "SIZE-T"
           "TW-EVENT-SPECIAL-GLUT"
           "TW-GET-BOTTOM-BAR"
           "TW-DEFINE"
           "TW-EVENT-MOUSE-BUTTON-GLFW"
           "TW-ADD-VAR-RW"
           "TW-TYPE"
           "TW-TYPE-DIR-3D"
           "TW-TYPE-DIR-3F"
           "TW-TYPE-QUAT-4D"
           "TW-TYPE-QUAT-4F"
           "TW-TYPE-STDSTRING"
           "TW-TYPE-CDSTRING"
           "TW-TYPE-COLOR-4F"
           "TW-TYPE-COLOR-3F"
           "TW-TYPE-COLOR-32"
           "TW-TYPE-DOUBLE"
           "TW-TYPE-FLOAT"
           "TW-TYPE-UINT-32"
           "TW-TYPE-INT-32"
           "TW-TYPE-UINT-16"
           "TW-TYPE-INT-16"
           "TW-TYPE-UINT-8"
           "TW-TYPE-INT-8"
           "TW-TYPE-CHAR"
           "TW-TYPE-BOOL-32"
           "TW-TYPE-BOOL-16"
           "TW-TYPE-BOOL-8"
           "TW-TYPE-BOOLCPP"
           "TW-TYPE-UNDEF"
           "E-TW-TYPE"
           "TW-BAR"
           "C-TW-BAR"
           "TW-DRAW"
           "TW-ERROR-HANDLER"))

(cl:in-package :anttweakbar)

(cffi:define-foreign-library anttweakbar
  (:darwin "libAntTweakBar.dylib"))

(defun load-anttweakbar-library ()
  (cffi:use-foreign-library anttweakbar))

(eval-when (:load-toplevel :execute)
  (load-anttweakbar-library))

(cl:defun vtable-lookup (pobj indx coff)
  (cl:let ((vptr (cffi:mem-ref pobj :pointer coff)))
    (cffi:mem-aref vptr :pointer (cl:- indx 2))))

(cl:defmacro virtual-funcall (pobj indx coff cl:&body body)
  `(cffi:foreign-funcall-pointer (vtable-lookup ,pobj ,indx ,coff) ,cl:nil
                                 ,@body))

(cffi::defctype tw-error-handler :pointer)

(cffi:defcfun ("TwDraw" tw-draw) :int)

(cffi:defcstruct c-tw-bar)

(cffi::defctype tw-bar c-tw-bar)

(cffi:defcenum e-tw-type
  (:tw-type-undef 0)
  (:tw-type-boolcpp 1)
  (:tw-type-bool-8 2)
  (:tw-type-bool-16 3)
  (:tw-type-bool-32 4)
  (:tw-type-char 5)
  (:tw-type-int-8 6)
  (:tw-type-uint-8 7)
  (:tw-type-int-16 8)
  (:tw-type-uint-16 9)
  (:tw-type-int-32 10)
  (:tw-type-uint-32 11)
  (:tw-type-float 12)
  (:tw-type-double 13)
  (:tw-type-color-32 14)
  (:tw-type-color-3f 15)
  (:tw-type-color-4f 16)
  (:tw-type-cdstring 17)
  (:tw-type-stdstring 805240836)
  (:tw-type-quat-4f 19)
  (:tw-type-quat-4d 20)
  (:tw-type-dir-3f 21)
  (:tw-type-dir-3d 22))

(cffi::defctype tw-type e-tw-type)

(cffi:defcfun ("TwAddVarRW" tw-add-var-rw) :int (bar :pointer) (name :string)
	      (type tw-type)
	      (var (:pointer :void))
	      (def :string))

(cffi:defcfun ("TwEventMouseButtonGLFW" tw-event-mouse-button-glfw) :int
  (glfw-button :int)
  (glfw-action :int))

(cffi:defcfun ("TwDefine" tw-define) :int (def :string))

(cffi:defcfun ("TwGetBottomBar" tw-get-bottom-bar) :pointer)

(cffi:defcfun ("TwEventSpecialGLUT" tw-event-special-glut) :int (glut-key :int)
	      (mouse-x :int)
	      (mouse-y :int))

(cffi::defctype size-t :unsigned-long)

(cffi:defcstruct c-tw-struct-member
  (name :pointer)
  (type tw-type)
  (offset size-t)
  (def-string :pointer))

(cffi::defctype tw-struct-member c-tw-struct-member)

(cffi::defctype tw-summary-callback :pointer)

(cffi:defcfun ("TwDefineStruct" tw-define-struct) tw-type (name :pointer)
	      (struct-members :pointer)
	      (nb-members :unsigned-int)
	      (struct-size size-t)
	      (summary-callback tw-summary-callback)
	      (summary-client-data (:pointer :void)))

(cffi:defcenum e-tw-param-value-type
  (:tw-param-int-32 0)
  (:tw-param-float 1)
  (:tw-param-double 2)
  (:tw-param-cstring 3))

(cffi::defctype tw-param-value-type e-tw-param-value-type)

(cffi::defctype glu-tmousemotionfun :pointer)

(cffi:defcfun ("TwTerminate" tw-terminate) :int)

(cffi:defcfun ("TwRemoveVar" tw-remove-var) :int (bar :pointer) (name :pointer))

(cffi::defctype tw-dummy-tw-double :int)

(cffi:defcfun ("TwGetBarByIndex" tw-get-bar-by-index) :pointer (bar-index :int))

(cffi:defcfun ("TwDeleteAllBars" tw-delete-all-bars) :int)

(cffi::defctype tw-dummy-tw-float :int)

(cffi:defcfun ("TwSetParam" tw-set-param-ff) :int (bar :pointer)
	      (var-name :string)
	      (param-name :string)
	      (param-value-type tw-param-value-type)
	      (in-value-count :unsigned-int)
	      (in-values :pointer))

(defun lisp-type-for-tw-param-type (param-value-type)
  (cond
    ((eq param-value-type :tw-param-int-32) :int)
    ((eq param-value-type :tw-param-float) :single-float)
    ((eq param-value-type :tw-param-double) :double-float)
    ((eq param-value-type :tw-param-cstring) :char)))

(defun tw-set-param (bar var-name param-name param-value-type in-values)
  (let* ((lisp-type (lisp-type-for-tw-param-type param-value-type))
	 (in-value-list (if (eq param-value-type :tw-param-cstring)
			   (coerce in-values 'list)
			   in-values))
	 (num-params (length in-value-list))
	 (in-value-ptr (cffi:foreign-alloc lisp-type :initial-contents in-value-list
					   :count (length in-value-list))))
    (tw-set-param-ff bar var-name param-name param-value-type num-params 
		     in-value-ptr)
    (cffi:foreign-free in-value-ptr)))

(cffi:defcfun ("TwHandleErrors" tw-handle-errors) :void
  (error-handler tw-error-handler))

(cffi:defcfun ("TwWindowSize" tw-window-size) :int (width :int) (height :int))

(cffi:defcfun ("TwRemoveAllVars" tw-remove-all-vars) :int (bar :pointer))

;; (cffi::defctype string basic-string-<char-,std-::char-traits-<char->,std-::allocator-<char-> >)

;; (cffi:defcfun ("TwCopyStdStringToLibrary" tw-copy-std-string-to-library) :void
;;   (destination-library-string string) (source-client-string string))

(cffi:defcenum e-tw-key-modifier
  (:tw-kmod-none 0)
  (:tw-kmod-shift 3)
  (:tw-kmod-ctrl 192)
  (:tw-kmod-alt 256)
  (:tw-kmod-meta 3072))

(cffi:defcfun ("TwEventMouseButtonGLUT" tw-event-mouse-button-glut) :int
  (glut-button :int)
  (glut-state :int)
  (mouse-x :int)
  (mouse-y :int))

(cffi:defcstruct c-tw-enum-val
  (value :int)
  (label :pointer))

(cffi::defctype tw-enum-val c-tw-enum-val)

(cffi:defcfun ("TwRefreshBar" tw-refresh-bar) :int (bar :pointer))

(cffi::defctype tw-dummy-tw-int :int)

(cffi:defcenum e-key-special
  (:tw-key-backspace 8)
  (:tw-key-tab 9)
  (:tw-key-clear 12)
  (:tw-key-return 13)
  (:tw-key-pause 19)
  (:tw-key-escape 27)
  (:tw-key-space 32)
  (:tw-key-delete 127)
  (:tw-key-up 273)
  (:tw-key-down 274)
  (:tw-key-right 275)
  (:tw-key-left 276)
  (:tw-key-insert 277)
  (:tw-key-home 278)
  (:tw-key-end 279)
  (:tw-key-page-up 280)
  (:tw-key-page-down 281)
  (:tw-key-f-1 282)
  (:tw-key-f-2 283)
  (:tw-key-f-3 284)
  (:tw-key-f-4 285)
  (:tw-key-f-5 286)
  (:tw-key-f-6 287)
  (:tw-key-f-7 288)
  (:tw-key-f-8 289)
  (:tw-key-f-9 290)
  (:tw-key-f-10 291)
  (:tw-key-f-11 292)
  (:tw-key-f-12 293)
  (:tw-key-f-13 294)
  (:tw-key-f-14 295)
  (:tw-key-f-15 296)
  (:tw-key-last 297))

(cffi:defcfun ("TwCopyCDStringToLibrary" tw-copy-cd-string-to-library) :void
  (destination-library-string-ptr :pointer)
  (source-client-string :pointer))

(cffi:defcfun ("TwEventKeyGLFW" tw-event-key-glfw) :int (glfw-key :int)
	      (glfw-action :int))

(cffi::defctype tw-dummy-tw-char :int)

(cffi::defctype tw-copy-cd-string-to-client :pointer)

(cffi:defcenum e-tw-graph-api
  (:tw-opengl 1)
  (:tw-direct-3d-9 2)
  (:tw-direct-3d-10 3)
  (:tw-direct-3d-11 4))

(cffi::defctype tw-graph-api e-tw-graph-api)

(cffi:defcfun ("TwInit" tw-init) :int (graph-api tw-graph-api)
	      (device (:pointer :void)))

(cffi:defcfun ("TwGetParam" tw-get-param) :int (bar :pointer)
	      (var-name :pointer)
	      (param-name :pointer)
	      (param-value-type tw-param-value-type)
	      (out-value-max-count :unsigned-int)
	      (out-values (:pointer :void)))

(cffi::defctype tw-copy-std-string-to-client :pointer)

(cffi:defcfun ("TwGetBarByName" tw-get-bar-by-name) :pointer (bar-name :pointer))

(cffi::defctype tw-key-modifier e-tw-key-modifier)

(cffi:defcfun ("TwAddSeparator" tw-add-separator) :int (bar :pointer)
	      (name :pointer)
	      (def :pointer))

(cffi::defctype tw-button-callback :pointer)

(cffi:defcfun ("TwAddButton" tw-add-button) :int (bar :pointer) (name :pointer)
	      (callback tw-button-callback)
	      (client-data (:pointer :void))
	      (def :pointer))

(cffi:defcfun ("TwSetTopBar" tw-set-top-bar) :int (bar :pointer))

(cffi:defcenum e-tw-mouse-button-id
  (:tw-mouse-left 1)
  (:tw-mouse-middle 2)
  (:tw-mouse-right 3))

(cffi::defctype tw-mouse-button-id e-tw-mouse-button-id)

(cffi::defctype tw-key-special e-key-special)

(cffi:defcfun ("TwEventSDL" tw-event-sdl) :int (sdl-event :pointer)
	      (sdl-major-version :unsigned-char)
	      (sdl-minor-version :unsigned-char))

(cffi:defcfun ("TwMouseWheel" tw-mouse-wheel) :int (pos :int))

(cffi:defcfun ("TwGetLastError" tw-get-last-error) :pointer)

(cffi::defctype tw-dummy-tw-short :int)

(cffi:defcfun ("TwSetCurrentWindow" tw-set-current-window) :int (window-id :int))

(cffi:defcfun ("TwGetTopBar" tw-get-top-bar) :pointer)

(cffi:defcfun ("TwCopyCDStringToClientFunc" tw-copy-cd-string-to-client-func) :void
  (copy-cd-string-func tw-copy-cd-string-to-client))

(cffi:defcfun ("TwGetBarName" tw-get-bar-name) :pointer (bar :pointer))

(cffi:defcfun ("TwDefineEnum" tw-define-enum) tw-type (name :pointer)
	      (enum-values :pointer)
	      (nb-values :unsigned-int))

(cffi:defcfun ("TwEventCharGLFW" tw-event-char-glfw) :int (glfw-char :int)
	      (glfw-action :int))

(cffi:defcfun ("TwGLUTModifiersFunc" tw-glut-modifiers-func) :int
  (glut-get-modifiers-func :pointer))

(cffi:defcenum e-tw-mouse-action
  (:tw-mouse-released 0)
  (:tw-mouse-pressed 1))

(cffi:defcfun ("TwAddVarRO" tw-add-var-ro) :int (bar :pointer) (name :pointer)
	      (type tw-type) (var :pointer)
	      (def :pointer))

(cffi:defcfun ("TwGetCurrentWindow" tw-get-current-window) :int)

(cffi:defcfun ("TwGetBarCount" tw-get-bar-count) :int)

(cffi::defctype tw-get-var-callback :pointer)

(cffi::defctype glu-tkeyboardfun :pointer)

(cffi:defcfun ("TwMouseMotion" tw-mouse-motion) :int (mouse-x :int)
	      (mouse-y :int))

(cffi:defcfun ("TwKeyPressed" tw-key-pressed) :int (key :int) (modifiers :int))

(cffi:defcfun ("TwEventKeyboardGLUT" tw-event-keyboard-glut) :int
  (glut-key :unsigned-char)
  (mouse-x :int)
  (mouse-y :int))

(cffi:defcfun ("TwKeyTest" tw-key-test) :int (key :int) (modifiers :int))

(cffi:defcfun ("TwEventSFML" tw-event-sfml) :int (sfml-event :pointer)
	      (sfml-major-version :unsigned-char)
	      (sfml-minor-version :unsigned-char))

(cffi::defctype tw-mouse-action e-tw-mouse-action)

(cffi:defcfun ("TwWindowExists" tw-window-exists) :int (window-id :int))

(cffi::defctype glu-tmousebuttonfun :pointer)

(cffi:defcfun ("TwDeleteBar" tw-delete-bar) :int (bar :pointer))

(cffi::defctype tw-set-var-callback :pointer)

(cffi:defcfun ("TwNewBar" tw-new-bar) :pointer (bar-name :string))

(cffi:defcfun ("TwEventMouseMotionGLUT" tw-event-mouse-motion-glut) :int
  (mouse-x :int)
  (mouse-y :int))

(cffi::defctype glu-tspecialfun :pointer)

(cffi:defcfun ("TwEventWin" tw-event-win) :int (wnd (:pointer :void))
	      (msg :unsigned-int)
	      (w-param :unsigned-int)
	      (l-param :int))

(cffi:defcfun ("TwSetBottomBar" tw-set-bottom-bar) :int (bar :pointer))

(cffi:defcfun ("TwMouseButton" tw-mouse-button) :int (action tw-mouse-action)
	      (button tw-mouse-button-id))

(cffi:defcfun ("TwCopyStdStringToClientFunc" tw-copy-std-string-to-client-func) :void
  (copy-std-string-to-client-func tw-copy-std-string-to-client))

(cffi:defcfun ("TwDefineEnumFromString" tw-define-enum-from-string) tw-type
  (name :pointer)
  (enum-string :pointer))

(cffi:defcfun ("TwAddVarCB" tw-add-var-cb) :int (bar :pointer) (name :pointer)
	      (type tw-type)
	      (set-callback tw-set-var-callback)
	      (get-callback tw-get-var-callback)
	      (client-data (:pointer :void))
	      (def :pointer))

(cffi:defcfun ("_ZN15CTwStructMemberaSERKS_" c-tw-struct-member-operator-=) c-tw-struct-member (this :pointer)
	      (arg1 c-tw-struct-member))

;; (cffi:defcfun ("_ZN15CTwStructMemberC1ERKS_" c-tw-struct-member-constructor) :void (this :pointer)
;; 	      (arg1 c-tw-struct-member))

(cl:defun c-tw-struct-member-new ()
  (cl:let ((instance (cffi:foreign-alloc 'c-tw-struct-member)))
    (c-tw-struct-member-constructor instance)
    instance))

(cffi:defcfun ("_ZN15CTwStructMemberC1Ev" c-tw-struct-member-constructor) :void (this :pointer))

(cffi:defcfun ("_ZN10CTwEnumValaSERKS_" c-tw-enum-val-operator-=) c-tw-enum-val (this :pointer)
	      (arg1 c-tw-enum-val))

;; (cffi:defcfun ("_ZN10CTwEnumValC1ERKS_" c-tw-enum-val-constructor) :void (this :pointer)
;; 	      (arg1 c-tw-enum-val))

(cl:defun c-tw-enum-val-new ()
  (cl:let ((instance (cffi:foreign-alloc 'c-tw-enum-val)))
    (c-tw-enum-val-constructor instance)
    instance))

(cffi:defcfun ("_ZN10CTwEnumValC1Ev" c-tw-enum-val-constructor) :void (this :pointer))

;; (cl:defun c-tw-enum-val-new ()
;;   (cl:let ((instance (cffi:foreign-alloc 'c-tw-enum-val)))
;;     (c-tw-enum-val-constructor instance)
;;     instance))
